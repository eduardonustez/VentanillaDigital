// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace PortalCliente.Shared
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "D:\VentanillaDigitalGit\Web.Application.NotariaFijaYMovil\VentanillaDigital\PortalCliente\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\VentanillaDigitalGit\Web.Application.NotariaFijaYMovil\VentanillaDigital\PortalCliente\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\VentanillaDigitalGit\Web.Application.NotariaFijaYMovil\VentanillaDigital\PortalCliente\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\VentanillaDigitalGit\Web.Application.NotariaFijaYMovil\VentanillaDigital\PortalCliente\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\VentanillaDigitalGit\Web.Application.NotariaFijaYMovil\VentanillaDigital\PortalCliente\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\VentanillaDigitalGit\Web.Application.NotariaFijaYMovil\VentanillaDigital\PortalCliente\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\VentanillaDigitalGit\Web.Application.NotariaFijaYMovil\VentanillaDigital\PortalCliente\_Imports.razor"
using Microsoft.Extensions.Configuration;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "D:\VentanillaDigitalGit\Web.Application.NotariaFijaYMovil\VentanillaDigital\PortalCliente\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "D:\VentanillaDigitalGit\Web.Application.NotariaFijaYMovil\VentanillaDigital\PortalCliente\_Imports.razor"
using PortalCliente;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "D:\VentanillaDigitalGit\Web.Application.NotariaFijaYMovil\VentanillaDigital\PortalCliente\_Imports.razor"
using PortalCliente.Components.Transversales;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "D:\VentanillaDigitalGit\Web.Application.NotariaFijaYMovil\VentanillaDigital\PortalCliente\_Imports.razor"
using PortalCliente.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "D:\VentanillaDigitalGit\Web.Application.NotariaFijaYMovil\VentanillaDigital\PortalCliente\_Imports.razor"
using PortalCliente.Services.Parametrizacion;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "D:\VentanillaDigitalGit\Web.Application.NotariaFijaYMovil\VentanillaDigital\PortalCliente\_Imports.razor"
using BlazorStrap;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "D:\VentanillaDigitalGit\Web.Application.NotariaFijaYMovil\VentanillaDigital\PortalCliente\_Imports.razor"
using Radzen;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "D:\VentanillaDigitalGit\Web.Application.NotariaFijaYMovil\VentanillaDigital\PortalCliente\_Imports.razor"
using Radzen.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 16 "D:\VentanillaDigitalGit\Web.Application.NotariaFijaYMovil\VentanillaDigital\PortalCliente\_Imports.razor"
using Blazor.Analytics;

#line default
#line hidden
#nullable disable
#nullable restore
#line 17 "D:\VentanillaDigitalGit\Web.Application.NotariaFijaYMovil\VentanillaDigital\PortalCliente\_Imports.razor"
using Blazor.Analytics.Components;

#line default
#line hidden
#nullable disable
#nullable restore
#line 18 "D:\VentanillaDigitalGit\Web.Application.NotariaFijaYMovil\VentanillaDigital\PortalCliente\_Imports.razor"
using Blazored.Typeahead;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "D:\VentanillaDigitalGit\Web.Application.NotariaFijaYMovil\VentanillaDigital\PortalCliente\Shared\MainLayout.razor"
using Components.RegistroTramite;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "D:\VentanillaDigitalGit\Web.Application.NotariaFijaYMovil\VentanillaDigital\PortalCliente\Shared\MainLayout.razor"
using PortalCliente.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "D:\VentanillaDigitalGit\Web.Application.NotariaFijaYMovil\VentanillaDigital\PortalCliente\Shared\MainLayout.razor"
using PortalCliente.Data.Account;

#line default
#line hidden
#nullable disable
#nullable restore
#line 16 "D:\VentanillaDigitalGit\Web.Application.NotariaFijaYMovil\VentanillaDigital\PortalCliente\Shared\MainLayout.razor"
using ApiGateway.Models.Transaccional;

#line default
#line hidden
#nullable disable
#nullable restore
#line 17 "D:\VentanillaDigitalGit\Web.Application.NotariaFijaYMovil\VentanillaDigital\PortalCliente\Shared\MainLayout.razor"
using PortalCliente.Pages.TramitePages;

#line default
#line hidden
#nullable disable
    public partial class MainLayout : LayoutComponentBase, IDisposable
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 131 "D:\VentanillaDigitalGit\Web.Application.NotariaFijaYMovil\VentanillaDigital\PortalCliente\Shared\MainLayout.razor"
      

    public long TramiteIdEnProceso { get; set; }
    private CancelarTramiteModal cancelarTramiteModal { get; set; }
    public TramitePage tramitePage { get; set; }
    string menuIconoDefecto = "menu";
    bool menuFijas = true;
    string nombreNotaria;
    public string ModalDisplay = "none;";
    public string ModalClass = "";
    public bool ShowBackdrop = false;
    public string MensajeCerrarSesion = "¿Desea cerrar sesión? Recuerde guardar cambios.";
    double tiempoInactividad = 0;
    string lastRequestedUrl = "";
    string AnuncioSitio = "";
    DotNetObjectReference<MainLayout> ObjectReference;
    [Inject]
    public ILocalStorageService localStorageService { get; set; }

    ModalForm modalFormAnuncio { get; set; }
    public bool esNotariaVirtual { get; set; }
    async void ExpandirNav()
    {
        menuIconoDefecto = menuIconoDefecto == "menu" ? "menu_open" : "menu";
        await js.InvokeVoidAsync("expandirNav");
    }
    void ChangeMenu(bool menu)
    {
        menuFijas = menu;
    }

    //[CascadingParameter] protected Task<AuthenticationState> AuthStat { get; set; }
    [JSInvokable]
    public async Task Logout()
    {
        await ((PortalCliente.Services.CustomAuthenticationStateProvider)AuthenticationStateProvider).MarkUserAsLoggedOut();
        NavigationManager.NavigateTo("/login");
    }
    [JSInvokable]
    public async Task notificationLogout()
    {
        SetMensajeCerrarSesion();
        Open();
    }
    public async Task ModificarVisuales()
    {
        await js.InvokeVoidAsync("cambiarTheme");
        if (NavigationManager.Uri.Contains("virtual") || NavigationManager.Uri.Contains("ciudadano"))
        {
            menuFijas = false;
        }
        StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {
        ObjectReference = DotNetObjectReference.Create(this);
        var userActual = (CustomAuthenticationStateProvider)_authenticationStateProvider;
        AuthenticatedUser userName = await userActual.GetAuthenticatedUser();
        nombreNotaria = userName != null ? (await
            NotariaService.ObtenerNotariaPorId(long.Parse(userName.Notaria))).NotariaNombre : "";
        if (userName != null)
        {
            nombreNotaria = (await
                NotariaService.ObtenerNotariaPorId(long.Parse(userName.Notaria))).NotariaNombre;
            await LogOutDueToInactivity(userName.Rol);
        }
        await ValidarConvenioNotariaVirtual();
        await _parametrizacionServicio.ValidarEstadoCaptorHuella();
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            AnuncioSitio = Configuration.GetValue<string>("AnuncioSitio");
            if (AnuncioSitio == "1")
                modalFormAnuncio.Open();
        }
    }

    async Task LogOutDueToInactivity(string rolName)
    {
        if (rolName == "Administrador" || rolName == "Notario Encargado")
        {
            tiempoInactividad = Configuration.GetValue<double>("SessionTimeMinutesAdmin");
            await js.InvokeVoidAsync("timerInactivo", ObjectReference,
                tiempoInactividad);
        }
        else
        {
            tiempoInactividad = Configuration.GetValue<double>("SessionTimeMinutes");
            await js.InvokeVoidAsync("timerInactivo", ObjectReference,
                tiempoInactividad);
        }
    }
    void SetMensajeCerrarSesion()
    {
        if (tiempoInactividad >= 3)
            MensajeCerrarSesion = "Su sesión vencerá en 2 minutos. Recuerde finalizar el trámite en proceso o cerrar sesión.";
        else if (tiempoInactividad >= 1 && tiempoInactividad < 3)
            MensajeCerrarSesion = "Su sesión vencerá en 30 segundos. Recuerde finalizar el trámite en proceso o cerrar sesión.";
        else
            MensajeCerrarSesion = "¿Desea cerrar sesión? Recuerde guardar cambios.";
    }

    async void MostrarMenu()
    {
        await js.InvokeVoidAsync("mostrarMenu");
    }

    async Task RegistrarMaquinaAsync()
    {
        try
        {
            await Parametrizacion.RegistrarMaquina();
        }
        catch (ApplicationException)
        {
            NavigationManager.NavigateTo("/install");
        }
    }

    public void Dispose()
    {
        GC.SuppressFinalize(this);
        if (ObjectReference != null)
        {
            //Now dispose our object reference so our component can be garbage collected
            ObjectReference.Dispose();
        }
    }
    public void Open()
    {
        ModalDisplay = "block;";
        ModalClass = "Show";
        ShowBackdrop = true;
        StateHasChanged();
    }

    public void Close()
    {
        ModalDisplay = "none";
        ModalClass = "";
        ShowBackdrop = false;
        MensajeCerrarSesion = "¿Desea cerrar sesión? Recuerde guardar cambios.";
        StateHasChanged();
    }

    protected async void OpenCancelTramiteModal(string urlRedirect)
    {
        lastRequestedUrl = urlRedirect;
        if (TramiteIdEnProceso > 0)
            cancelarTramiteModal.Open();
    }
    protected async void CancelTramite(string MotivoCancelacion)
    {
        if (!string.IsNullOrWhiteSpace(MotivoCancelacion))
        {
            TramiteIdEnProceso = 0;
            await tramitePage.CancelarTramite(MotivoCancelacion);
            if (!string.IsNullOrWhiteSpace(lastRequestedUrl))
                NavigationManager.NavigateTo(lastRequestedUrl);
        }
    }

    protected async Task ValidarConvenioNotariaVirtual()
    {
        string[] res = { };
        var value = await localStorageService.GetItem<string>("ConvenioNotaria");
        if (!string.IsNullOrEmpty(value))
            res = value.Split('|');
        if (res.Length == 0)
        {
            await AsignarConvenioNotariaVirtual();
        }
        else
        {
            bool.TryParse(res[0], out bool ConvenioNotaria);
            DateTime.TryParse(res[1], out DateTime fechaConsulta);
            if (fechaConsulta < DateTime.Now)
                await AsignarConvenioNotariaVirtual();
            else
                esNotariaVirtual = ConvenioNotaria;
        }
    }

    protected async Task AsignarConvenioNotariaVirtual()
    {
        var state = await _authenticationStateProvider.GetAuthenticationStateAsync();
        var authuser = state.User;
        if (!long.TryParse(authuser.Claims.FirstOrDefault(c => c.Type == "NotariaId")?.Value, out long notariaId))
            notariaId = -1;
        if (notariaId != -1)
        {
            esNotariaVirtual = await _tramitesVirtualService.ValidarConvenioNotariaVirtual(notariaId);
            await localStorageService.RemoveItem("ConvenioNotaria");
            await localStorageService.SetItem<string>("ConvenioNotaria", $"{esNotariaVirtual.ToString()}|{DateTime.Now.AddDays(1)}");
        }
        else
        {
            //await localStorageService.RemoveItem("ConvenioNotaria");
        }
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IParametrizacionServicio _parametrizacionServicio { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ITramiteVirtualService _tramitesVirtualService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private PortalCliente.Services.SignalR.ISignalRv2Service SignalRv2Service { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private AuthenticationStateProvider _authenticationStateProvider { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private PortalCliente.Services.Notaria.INotariaService NotariaService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IParametrizacionServicio Parametrizacion { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IConfiguration Configuration { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime js { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager NavigationManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private AuthenticationStateProvider AuthenticationStateProvider { get; set; }
    }
}
#pragma warning restore 1591
