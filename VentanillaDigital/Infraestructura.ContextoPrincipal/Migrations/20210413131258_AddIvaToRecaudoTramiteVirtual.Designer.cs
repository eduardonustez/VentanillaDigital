// <auto-generated />
using System;
using Infraestructura.ContextoPrincipal.UnidadDeTrabajo;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infraestructura.ContextoPrincipal.Migrations
{
    [DbContext(typeof(UnidadTrabajo))]
    [Migration("20210413131258_AddIvaToRecaudoTramiteVirtual")]
    partial class AddIvaToRecaudoTramiteVirtual
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Dominio.ContextoPrincipal.Entidad.ArchivosPortalVirtual", b =>
                {
                    b.Property<long>("ArchivosPortalVirtualId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Base64")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Formato")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<short>("TipoArchivo")
                        .HasColumnType("smallint");

                    b.Property<int>("TramitesPortalVirtualId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ArchivosPortalVirtualId");

                    b.HasIndex("TipoArchivo");

                    b.HasIndex("TramitesPortalVirtualId");

                    b.ToTable("ArchivosPortalVirtual","Transaccional");
                });

            modelBuilder.Entity("Dominio.ContextoPrincipal.Entidad.ConvenioNotariaVirtual", b =>
                {
                    b.Property<int>("ConvenioNotariaVirtualId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Latitud1")
                        .HasColumnType("decimal (10,6)");

                    b.Property<decimal>("Latitud2")
                        .HasColumnType("decimal (10,6)");

                    b.Property<decimal>("Longitud1")
                        .HasColumnType("decimal (10,6)");

                    b.Property<decimal>("Longitud2")
                        .HasColumnType("decimal (10,6)");

                    b.Property<long>("NotariaId")
                        .HasColumnType("bigint");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ConvenioNotariaVirtualId");

                    b.HasIndex("NotariaId");

                    b.ToTable("ConvenioNotariaVirtual","Parametricas");
                });

            modelBuilder.Entity("Dominio.ContextoPrincipal.Entidad.EstadoTramiteVirtual", b =>
                {
                    b.Property<int>("EstadoTramiteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EstadoTramiteID");

                    b.ToTable("EstadoTramiteVirtual","Parametricas");
                });

            modelBuilder.Entity("Dominio.ContextoPrincipal.Entidad.Log.LogTramitePortalVirtual", b =>
                {
                    b.Property<int>("LogTramiteVirtualPortalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaveTestamentoCerrado")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<bool>("EnvioSNR")
                        .HasColumnType("bit");

                    b.Property<int>("EstadoTramiteVirtualId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Lat")
                        .HasColumnType("decimal(9,6)");

                    b.Property<decimal>("Lng")
                        .HasColumnType("decimal(9,6)");

                    b.Property<string>("LogResponseSNR")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int>("TramitePortalVirtualId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LogTramiteVirtualPortalId");

                    b.ToTable("LogTramitePortalVirtual","Log");
                });

            modelBuilder.Entity("Dominio.ContextoPrincipal.Entidad.Parametricas.ActoNotarial", b =>
                {
                    b.Property<int>("ActoNotarialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(16)")
                        .HasMaxLength(16)
                        .IsUnicode(false);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(512)")
                        .HasMaxLength(512)
                        .IsUnicode(false);

                    b.Property<int?>("TipoTramiteVirtualId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ActoNotarialId");

                    b.HasIndex("TipoTramiteVirtualId");

                    b.ToTable("ActosNotariales","Parametricas");
                });

            modelBuilder.Entity("Dominio.ContextoPrincipal.Entidad.Parametricas.Archivos.GrafoNotario", b =>
                {
                    b.Property<long>("GrafoNotarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Contenido")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ruta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Tamanio")
                        .HasColumnType("bigint");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GrafoNotarioId");

                    b.ToTable("GrafosNotarios","Parametricas");
                });

            modelBuilder.Entity("Dominio.ContextoPrincipal.Entidad.Parametricas.Archivos.SelloNotaria", b =>
                {
                    b.Property<long>("SelloNotariaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Contenido")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ruta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Tamanio")
                        .HasColumnType("bigint");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SelloNotariaId");

                    b.ToTable("SellosNotarias","Parametricas");
                });

            modelBuilder.Entity("Dominio.ContextoPrincipal.Entidad.Parametricas.Categoria", b =>
                {
                    b.Property<long>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoriaId");

                    b.ToTable("Categorias","Parametricas");
                });

            modelBuilder.Entity("Dominio.ContextoPrincipal.Entidad.Parametricas.Certificado", b =>
                {
                    b.Property<long>("CertificadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Datos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaSolicitud")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaVencimiento")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CertificadoId");

                    b.ToTable("Certificados","Parametricas");
                });

            modelBuilder.Entity("Dominio.ContextoPrincipal.Entidad.Parametricas.ConsultaNotariaSegura", b =>
                {
                    b.Property<long>("ConsultaNotariaSeguraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EncontroArchivo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaConsulta")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("NotariaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TramiteId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TramiteIdHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ConsultaNotariaSeguraId");

                    b.ToTable("ConsultaNotariaSegura","Parametricas");
                });

            modelBuilder.Entity("Dominio.ContextoPrincipal.Entidad.Parametricas.ConvenioRNEC", b =>
                {
                    b.Property<long>("ConvenioRNECId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Convenio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<long>("IdCliente")
                        .HasColumnType("bigint");

                    b.Property<long>("IdOficina")
                        .HasColumnType("bigint");

                    b.Property<long>("IdRol")
                        .HasColumnType("bigint");

                    b.Property<long>("IdZona")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("NotariaId")
                        .HasColumnType("bigint");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ConvenioRNECId");

                    b.HasIndex("NotariaId");

                    b.ToTable("ConveniosRNEC","Parametricas");
                });

            modelBuilder.Entity("Dominio.ContextoPrincipal.Entidad.Parametricas.EstadoTramite", b =>
                {
                    b.Property<long>("EstadoTramiteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EstadoTramiteId");

                    b.ToTable("EstadosTramites","Parametricas");
                });

            modelBuilder.Entity("Dominio.ContextoPrincipal.Entidad.Parametricas.Maquina", b =>
                {
                    b.Property<long>("MaquinaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DireccionIP")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MAC")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<long>("NotariaId")
                        .HasColumnType("bigint");

                    b.Property<int>("TipoMaquina")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaquinaId");

                    b.HasIndex("NotariaId");

                    b.ToTable("Maquinas","Parametricas");
                });

            modelBuilder.Entity("Dominio.ContextoPrincipal.Entidad.Parametricas.Notaria", b =>
                {
                    b.Property<long>("NotariaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CirculoNotaria")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<long?>("NotarioEnTurno")
                        .HasColumnType("bigint");

                    b.Property<int>("NumeroNotaria")
                        .HasColumnType("int");

                    b.Property<string>("NumeroNotariaEnLetras")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<long?>("SelloId")
                        .HasColumnType("bigint");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<long>("UbicacionId")
                        .HasColumnType("bigint");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NotariaId");

                    b.HasIndex("SelloId")
                        .IsUnique()
                        .HasFilter("[SelloId] IS NOT NULL");

                    b.HasIndex("UbicacionId");

                    b.ToTable("Notarias","Parametricas");
                });

            modelBuilder.Entity("Dominio.ContextoPrincipal.Entidad.Parametricas.NotariaCliente", b =>
                {
                    b.Property<long>("NotariaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ciudad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Departamento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NotariaId");

                    b.ToTable("ObtenerNotarias","Parametricas");
                });

            modelBuilder.Entity("Dominio.ContextoPrincipal.Entidad.Parametricas.NotariaUsuarios", b =>
                {
                    b.Property<long>("NotariaUsuariosId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Area")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("NotariaId")
                        .HasColumnType("bigint");

                    b.Property<long>("PersonaId")
                        .HasColumnType("bigint");

                    b.Property<bool>("SincronizoRNEC")
                        .HasColumnType("bit");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuariosId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NotariaUsuariosId");

                    b.HasIndex("IsDeleted")
                        .HasAnnotation("SqlServer:Include", new[] { "UsuariosId" });

                    b.HasIndex("NotariaId");

                    b.HasIndex("PersonaId");

                    b.HasIndex("UserEmail");

                    b.HasIndex("IsDeleted", "UserEmail");

                    b.ToTable("NotariasUsuario","Parametricas");
                });

            modelBuilder.Entity("Dominio.ContextoPrincipal.Entidad.Parametricas.Notario", b =>
                {
                    b.Property<long>("NotarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<long?>("GrafoId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Nit")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<long>("NotariaUsuariosId")
                        .HasColumnType("bigint");

                    b.Property<string>("Pin")
                        .HasColumnType("nvarchar(6)")
                        .HasMaxLength(6);

                    b.Property<int>("TipoNotario")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NotarioId");

                    b.HasIndex("GrafoId")
                        .IsUnique()
                        .HasFilter("[GrafoId] IS NOT NULL");

                    b.HasIndex("NotariaUsuariosId")
                        .IsUnique();

                    b.ToTable("Notarios","Parametricas");
                });

            modelBuilder.Entity("Dominio.ContextoPrincipal.Entidad.Parametricas.Parametrica", b =>
                {
                    b.Property<long>("ParametricaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Expresion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Longitud")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.HasKey("ParametricaId");

                    b.ToTable("Parametricas","Parametricas");
                });

            modelBuilder.Entity("Dominio.ContextoPrincipal.Entidad.Parametricas.Persona", b =>
                {
                    b.Property<long>("PersonaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(120)")
                        .HasMaxLength(120);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(512)")
                        .HasMaxLength(512);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Genero")
                        .HasColumnType("int")
                        .HasMaxLength(1);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("NumeroCelular")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("NumeroDocumento")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int>("TipoIdentificacionId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tokenAuth")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonaId");

                    b.HasIndex("TipoIdentificacionId", "NumeroDocumento")
                        .IsUnique();

                    b.ToTable("Personas","Parametricas");
                });

            modelBuilder.Entity("Dominio.ContextoPrincipal.Entidad.Parametricas.PersonaDatos", b =>
                {
                    b.Property<long>("PersonaDatosId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("PersonaId")
                        .HasColumnType("bigint");

                    b.Property<int>("TipoDatoId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ValorDato")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("PersonaDatosId");

                    b.HasIndex("PersonaId");

                    b.HasIndex("TipoDatoId");

                    b.ToTable("PersonasDatos","Parametricas");
                });

            modelBuilder.Entity("Dominio.ContextoPrincipal.Entidad.Parametricas.PlantillaActa", b =>
                {
                    b.Property<long>("PlantillaActaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Contenido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PlantillaActaId");

                    b.ToTable("PlantillasActas","Parametricas");
                });

            modelBuilder.Entity("Dominio.ContextoPrincipal.Entidad.Parametricas.TipoArchivoTramiteVirtual", b =>
                {
                    b.Property<short>("TipoArchivoTramiteVirtualId")
                        .HasColumnType("smallint");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipoArchivoTramiteVirtualId");

                    b.ToTable("TipoArchivoTramiteVirtual","Parametricas");
                });

            modelBuilder.Entity("Dominio.ContextoPrincipal.Entidad.Parametricas.TipoDato", b =>
                {
                    b.Property<int>("TipoDatoId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.HasKey("TipoDatoId");

                    b.ToTable("TiposDatos","Parametricas");

                    b.HasData(
                        new
                        {
                            TipoDatoId = 1,
                            Nombre = "Direccion"
                        },
                        new
                        {
                            TipoDatoId = 2,
                            Nombre = "NumeroCelular"
                        },
                        new
                        {
                            TipoDatoId = 3,
                            Nombre = "Email"
                        });
                });

            modelBuilder.Entity("Dominio.ContextoPrincipal.Entidad.Parametricas.TipoIdentificacion", b =>
                {
                    b.Property<int>("TipoIdentificacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abreviatura")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipoIdentificacionId");

                    b.ToTable("TiposIdentificacion","Parametricas");
                });

            modelBuilder.Entity("Dominio.ContextoPrincipal.Entidad.Parametricas.TipoTramite", b =>
                {
                    b.Property<long>("TipoTramiteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CategoriaId")
                        .HasColumnType("bigint");

                    b.Property<long>("CodigoTramite")
                        .HasColumnType("bigint");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<long>("PlantillaActaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PlantillaDosStickerId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PlantillaStickerId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProductoReconoserId")
                        .HasColumnType("bigint");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipoTramiteId");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("PlantillaActaId");

                    b.HasIndex("PlantillaDosStickerId");

                    b.HasIndex("PlantillaStickerId");

                    b.ToTable("TiposTramites","Parametricas");
                });

            modelBuilder.Entity("Dominio.ContextoPrincipal.Entidad.Parametricas.TipoTramiteVirtual", b =>
                {
                    b.Property<int>("TipoTramiteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipoTramiteID");

                    b.ToTable("TipoTramiteVirtual","Parametricas");
                });

            modelBuilder.Entity("Dominio.ContextoPrincipal.Entidad.Parametricas.Ubicacion", b =>
                {
                    b.Property<long>("UbicacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("UbicacionPadreId")
                        .HasColumnType("bigint");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UbicacionId");

                    b.HasIndex("UbicacionPadreId");

                    b.ToTable("Ubicaciones","Parametricas");
                });

            modelBuilder.Entity("Dominio.ContextoPrincipal.Entidad.Parametricas.UsuarioAdministracion", b =>
                {
                    b.Property<long>("UsuarioAdministracionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("Password")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UsuarioAdministracionId");

                    b.ToTable("UsuariosAdministracion","Parametricas");
                });

            modelBuilder.Entity("Dominio.ContextoPrincipal.Entidad.TramitesPortalVirtual", b =>
                {
                    b.Property<int>("TramitesPortalVirtualId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ActoPrincipalId")
                        .HasColumnType("int");

                    b.Property<string>("CUANDI")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("DatosAdicionales")
                        .HasColumnType("nvarchar(1500)")
                        .HasMaxLength(1500);

                    b.Property<string>("DatosAdicionalesCierre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DetalleCambioEstado")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int>("EstadoTramiteVirtualId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("NotariaId")
                        .HasColumnType("int");

                    b.Property<string>("NumeroDocumento")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("TipoDocumento")
                        .HasColumnType("int");

                    b.Property<int>("TipoTramiteVirtualId")
                        .HasColumnType("int");

                    b.Property<string>("TramiteVirtualGuid")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("TramiteVirtualID")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TramitesPortalVirtualId");

                    b.HasIndex("ActoPrincipalId");

                    b.HasIndex("EstadoTramiteVirtualId");

                    b.HasIndex("TipoTramiteVirtualId");

                    b.HasIndex("TramiteVirtualID", "NotariaId")
                        .IsUnique();

                    b.ToTable("TramitesPortalVirtual","Transaccional");
                });

            modelBuilder.Entity("Dominio.ContextoPrincipal.Entidad.Transaccional.ActoPorTramite", b =>
                {
                    b.Property<long>("ActoPorTramiteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActoNotarialId")
                        .HasColumnType("int");

                    b.Property<string>("Cuandi")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<short>("Orden")
                        .HasColumnType("smallint");

                    b.Property<int>("TramitePortalVirtualId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ActoPorTramiteId");

                    b.HasIndex("ActoNotarialId");

                    b.HasIndex("ActoPorTramiteId");

                    b.HasIndex("TramitePortalVirtualId");

                    b.ToTable("ActosPorTramite","Transaccional");
                });

            modelBuilder.Entity("Dominio.ContextoPrincipal.Entidad.Transaccional.Archivo", b =>
                {
                    b.Property<long>("ArchivoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Contenido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("MetadataArchivoId")
                        .HasColumnType("bigint");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ArchivoId");

                    b.HasIndex("MetadataArchivoId")
                        .IsUnique();

                    b.ToTable("Archivos","Transaccional");
                });

            modelBuilder.Entity("Dominio.ContextoPrincipal.Entidad.Transaccional.Compareciente", b =>
                {
                    b.Property<long>("ComparecienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<long>("FirmaId")
                        .HasColumnType("bigint");

                    b.Property<long>("FotoId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("HitDedo1")
                        .HasColumnType("bit");

                    b.Property<bool?>("HitDedo2")
                        .HasColumnType("bit");

                    b.Property<long>("ImagenDocumentoId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MotivoSinBiometria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreDigitado")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<long>("PersonaId")
                        .HasColumnType("bigint");

                    b.Property<string>("PeticionRNEC")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36)
                        .HasDefaultValue("");

                    b.Property<int?>("Posicion")
                        .HasColumnType("int");

                    b.Property<long>("TramiteId")
                        .HasColumnType("bigint");

                    b.Property<bool>("TramiteSinBiometria")
                        .HasColumnType("bit");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vigencia")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("ComparecienteId");

                    b.HasIndex("FirmaId")
                        .IsUnique();

                    b.HasIndex("FotoId")
                        .IsUnique();

                    b.HasIndex("ImagenDocumentoId")
                        .IsUnique();

                    b.HasIndex("PersonaId");

                    b.HasIndex("TramiteId");

                    b.ToTable("Comparecientes","Transaccional");
                });

            modelBuilder.Entity("Dominio.ContextoPrincipal.Entidad.Transaccional.DocumentoPendienteAutorizar", b =>
                {
                    b.Property<long>("DocumentoPendienteAutorizarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Error")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValueSql("1");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaGeneracion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Generado")
                        .HasColumnType("bit");

                    b.Property<short>("Intentos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValue((short)0);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MachineName")
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<long>("NotariaId")
                        .HasColumnType("bigint");

                    b.Property<long>("NotarioUsuarioId")
                        .HasColumnType("bigint");

                    b.Property<string>("Seguimiento")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<long>("TramiteId")
                        .HasColumnType("bigint");

                    b.Property<bool>("UsarSticker")
                        .HasColumnType("bit");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DocumentoPendienteAutorizarId");

                    b.HasIndex("NotariaId");

                    b.HasIndex("TramiteId");

                    b.ToTable("DocumentosPendienteAutorizar","Transaccional");
                });

            modelBuilder.Entity("Dominio.ContextoPrincipal.Entidad.Transaccional.DocumentoPrevio", b =>
                {
                    b.Property<long>("DocumentoPrevioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Documento")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Seguimiento")
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<long>("TramiteId")
                        .HasColumnType("bigint");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DocumentoPrevioId");

                    b.HasIndex("TramiteId")
                        .IsUnique();

                    b.ToTable("DocumentosPrevios","Transaccional");
                });

            modelBuilder.Entity("Dominio.ContextoPrincipal.Entidad.Transaccional.ExcepcionHuella", b =>
                {
                    b.Property<long>("ExcepcionHuellaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ComparecienteId")
                        .HasColumnType("bigint");

                    b.Property<int>("DedosExceptuados")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExcepcionHuellaId");

                    b.HasIndex("ComparecienteId")
                        .IsUnique();

                    b.ToTable("ExcepcionesHuellas","Transaccional");
                });

            modelBuilder.Entity("Dominio.ContextoPrincipal.Entidad.Transaccional.MetadataArchivo", b =>
                {
                    b.Property<long>("MetadataArchivoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Ruta")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<long>("Tamanio")
                        .HasColumnType("bigint");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MetadataArchivoId");

                    b.ToTable("MetadataArchivos","Transaccional");
                });

            modelBuilder.Entity("Dominio.ContextoPrincipal.Entidad.Transaccional.RecaudoTramiteVirtual", b =>
                {
                    b.Property<long>("RecaudoTramiteVirtualId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CUS")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaPagado")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("IVA")
                        .HasColumnType("decimal(18,0)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("NumeroIdenficacion")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("varchar(512)")
                        .HasMaxLength(512)
                        .IsUnicode(false);

                    b.Property<int>("TipoIdentificacion")
                        .HasColumnType("int");

                    b.Property<int>("TramitePortalVirtualId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ValorPagado")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(18,0)");

                    b.HasKey("RecaudoTramiteVirtualId");

                    b.HasIndex("TramitePortalVirtualId");

                    b.ToTable("RecaudosTramiteVirtual","Transaccional");
                });

            modelBuilder.Entity("Dominio.ContextoPrincipal.Entidad.Transaccional.Tramite", b =>
                {
                    b.Property<long>("TramiteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ActaNotarialId")
                        .HasColumnType("bigint");

                    b.Property<int>("CantidadComparecientes")
                        .HasColumnType("int");

                    b.Property<string>("DatosAdicionales")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DireccionComparecencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("EstadoTramiteId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Fecha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FueraDeDespacho")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("NotariaId")
                        .HasColumnType("bigint");

                    b.Property<long>("TipoTramiteId")
                        .HasColumnType("bigint");

                    b.Property<bool>("UsarSticker")
                        .HasColumnType("bit");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TramiteId");

                    b.HasIndex("ActaNotarialId")
                        .IsUnique()
                        .HasFilter("[ActaNotarialId] IS NOT NULL");

                    b.HasIndex("EstadoTramiteId");

                    b.HasIndex("NotariaId");

                    b.HasIndex("TipoTramiteId");

                    b.HasIndex("IsDeleted", "NotariaId");

                    b.HasIndex("IsDeleted", "NotariaId", "EstadoTramiteId")
                        .HasAnnotation("SqlServer:Include", new[] { "TramiteId", "FechaCreacion", "CantidadComparecientes", "TipoTramiteId" });

                    b.HasIndex("IsDeleted", "NotariaId", "FechaCreacion");

                    b.HasIndex("IsDeleted", "NotariaId", "EstadoTramiteId", "FechaCreacion")
                        .HasAnnotation("SqlServer:Include", new[] { "TramiteId", "CantidadComparecientes", "TipoTramiteId" });

                    b.ToTable("Tramites","Transaccional");
                });

            modelBuilder.Entity("Dominio.ContextoPrincipal.Entidad.Transaccional.TramitePortalVirtualMensaje", b =>
                {
                    b.Property<long>("TramitePortalVirtualMensajeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("EsNotario")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasColumnType("varchar(512)")
                        .HasMaxLength(512)
                        .IsUnicode(false);

                    b.Property<int>("TramitePortalVirtualId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TramitePortalVirtualMensajeId");

                    b.HasIndex("TramitePortalVirtualId");

                    b.ToTable("TramitePortalVirtualMensajes","Transaccional");
                });

            modelBuilder.Entity("Dominio.ContextoPrincipal.Entidad.ArchivosPortalVirtual", b =>
                {
                    b.HasOne("Dominio.ContextoPrincipal.Entidad.Parametricas.TipoArchivoTramiteVirtual", "TipoArchivoTramiteVirtual")
                        .WithMany()
                        .HasForeignKey("TipoArchivo")
                        .HasConstraintName("FK_ArchivosPortalVirtual_TipoArchivoTramiteVirtual")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dominio.ContextoPrincipal.Entidad.TramitesPortalVirtual", "TramitesPortalVirtual")
                        .WithMany()
                        .HasForeignKey("TramitesPortalVirtualId")
                        .HasConstraintName("FK_ArchivosPortalVirtual_TramitesPortalVirtual")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Dominio.ContextoPrincipal.Entidad.ConvenioNotariaVirtual", b =>
                {
                    b.HasOne("Dominio.ContextoPrincipal.Entidad.Parametricas.Notaria", "Notaria")
                        .WithMany()
                        .HasForeignKey("NotariaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dominio.ContextoPrincipal.Entidad.Parametricas.ActoNotarial", b =>
                {
                    b.HasOne("Dominio.ContextoPrincipal.Entidad.Parametricas.TipoTramiteVirtual", "TipoTramiteVirtual")
                        .WithMany("ActosNotariales")
                        .HasForeignKey("TipoTramiteVirtualId");
                });

            modelBuilder.Entity("Dominio.ContextoPrincipal.Entidad.Parametricas.ConvenioRNEC", b =>
                {
                    b.HasOne("Dominio.ContextoPrincipal.Entidad.Parametricas.Notaria", "Notaria")
                        .WithMany()
                        .HasForeignKey("NotariaId")
                        .HasConstraintName("FK_ConveniosRNEC_Notarias")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Dominio.ContextoPrincipal.Entidad.Parametricas.Maquina", b =>
                {
                    b.HasOne("Dominio.ContextoPrincipal.Entidad.Parametricas.Notaria", "Notaria")
                        .WithMany()
                        .HasForeignKey("NotariaId")
                        .HasConstraintName("FK_Maquinas_Notarias")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Dominio.ContextoPrincipal.Entidad.Parametricas.Notaria", b =>
                {
                    b.HasOne("Dominio.ContextoPrincipal.Entidad.Parametricas.Archivos.SelloNotaria", "SelloArchivo")
                        .WithOne()
                        .HasForeignKey("Dominio.ContextoPrincipal.Entidad.Parametricas.Notaria", "SelloId")
                        .HasConstraintName("FK_Notarias_SellosNotarias")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Dominio.ContextoPrincipal.Entidad.Parametricas.Ubicacion", "Ubicacion")
                        .WithMany()
                        .HasForeignKey("UbicacionId")
                        .HasConstraintName("FK_Notarias_Ubicaciones")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Dominio.ContextoPrincipal.Entidad.Parametricas.NotariaUsuarios", b =>
                {
                    b.HasOne("Dominio.ContextoPrincipal.Entidad.Parametricas.Notaria", "Notaria")
                        .WithMany("NotariasUsuarios")
                        .HasForeignKey("NotariaId")
                        .HasConstraintName("FK_NotariasUsuarios_Notarias")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dominio.ContextoPrincipal.Entidad.Parametricas.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId")
                        .HasConstraintName("FK_NotariasUsuarios_Personas")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Dominio.ContextoPrincipal.Entidad.Parametricas.Notario", b =>
                {
                    b.HasOne("Dominio.ContextoPrincipal.Entidad.Parametricas.Archivos.GrafoNotario", "GrafoArchivo")
                        .WithOne()
                        .HasForeignKey("Dominio.ContextoPrincipal.Entidad.Parametricas.Notario", "GrafoId")
                        .HasConstraintName("FK_Notarios_GrafosNotarios")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Dominio.ContextoPrincipal.Entidad.Parametricas.NotariaUsuarios", "NotariaUsuarios")
                        .WithOne("Notario")
                        .HasForeignKey("Dominio.ContextoPrincipal.Entidad.Parametricas.Notario", "NotariaUsuariosId")
                        .HasConstraintName("FK_Notarios_NotariasUsuarios")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Dominio.ContextoPrincipal.Entidad.Parametricas.Persona", b =>
                {
                    b.HasOne("Dominio.ContextoPrincipal.Entidad.Parametricas.TipoIdentificacion", "TipoIdentificacion")
                        .WithMany()
                        .HasForeignKey("TipoIdentificacionId")
                        .HasConstraintName("FK_TipoIdentificacion_Personas")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Dominio.ContextoPrincipal.Entidad.Parametricas.PersonaDatos", b =>
                {
                    b.HasOne("Dominio.ContextoPrincipal.Entidad.Parametricas.Persona", "Persona")
                        .WithMany("PersonaDatos")
                        .HasForeignKey("PersonaId")
                        .HasConstraintName("FK_PersonaDatos_Personas")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dominio.ContextoPrincipal.Entidad.Parametricas.TipoDato", "TipoDato")
                        .WithMany()
                        .HasForeignKey("TipoDatoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dominio.ContextoPrincipal.Entidad.Parametricas.TipoTramite", b =>
                {
                    b.HasOne("Dominio.ContextoPrincipal.Entidad.Parametricas.Categoria", "Categoria")
                        .WithMany("TiposTramites")
                        .HasForeignKey("CategoriaId")
                        .HasConstraintName("FK_TiposTramites_Categorias")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dominio.ContextoPrincipal.Entidad.Parametricas.PlantillaActa", "PlantillaActa")
                        .WithMany("TiposTramites")
                        .HasForeignKey("PlantillaActaId")
                        .HasConstraintName("FK_TiposTramites_PlantillasActas")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Dominio.ContextoPrincipal.Entidad.Parametricas.PlantillaActa", "PlantillaDosSticker")
                        .WithMany()
                        .HasForeignKey("PlantillaDosStickerId");

                    b.HasOne("Dominio.ContextoPrincipal.Entidad.Parametricas.PlantillaActa", "PlantillaSticker")
                        .WithMany()
                        .HasForeignKey("PlantillaStickerId")
                        .HasConstraintName("FK_TiposTramites_PlantillasStickers")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Dominio.ContextoPrincipal.Entidad.Parametricas.Ubicacion", b =>
                {
                    b.HasOne("Dominio.ContextoPrincipal.Entidad.Parametricas.Ubicacion", "UbicacionPadre")
                        .WithMany("UbicacionesHijo")
                        .HasForeignKey("UbicacionPadreId")
                        .HasConstraintName("FK_Ubicacion_UbicacionPadre")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Dominio.ContextoPrincipal.Entidad.TramitesPortalVirtual", b =>
                {
                    b.HasOne("Dominio.ContextoPrincipal.Entidad.Parametricas.ActoNotarial", "ActoPrincipal")
                        .WithMany("TramitesPortalVirtual")
                        .HasForeignKey("ActoPrincipalId");

                    b.HasOne("Dominio.ContextoPrincipal.Entidad.EstadoTramiteVirtual", "EstadoTramiteVirtual")
                        .WithMany()
                        .HasForeignKey("EstadoTramiteVirtualId")
                        .HasConstraintName("FK_TramitesPortalVirtual_EstadoTramiteVirtual")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dominio.ContextoPrincipal.Entidad.Parametricas.TipoTramiteVirtual", "TipoTramiteVirtual")
                        .WithMany()
                        .HasForeignKey("TipoTramiteVirtualId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dominio.ContextoPrincipal.Entidad.Transaccional.ActoPorTramite", b =>
                {
                    b.HasOne("Dominio.ContextoPrincipal.Entidad.Parametricas.ActoNotarial", "ActoNotarial")
                        .WithMany("ActosPorTramite")
                        .HasForeignKey("ActoNotarialId")
                        .IsRequired();

                    b.HasOne("Dominio.ContextoPrincipal.Entidad.TramitesPortalVirtual", "TramitesPortalVirtual")
                        .WithMany("ActosPorTramite")
                        .HasForeignKey("TramitePortalVirtualId")
                        .IsRequired();
                });

            modelBuilder.Entity("Dominio.ContextoPrincipal.Entidad.Transaccional.Archivo", b =>
                {
                    b.HasOne("Dominio.ContextoPrincipal.Entidad.Transaccional.MetadataArchivo", "MetadataArchivo")
                        .WithOne("Archivo")
                        .HasForeignKey("Dominio.ContextoPrincipal.Entidad.Transaccional.Archivo", "MetadataArchivoId")
                        .HasConstraintName("FK_Archivos_MetadataArchivos")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Dominio.ContextoPrincipal.Entidad.Transaccional.Compareciente", b =>
                {
                    b.HasOne("Dominio.ContextoPrincipal.Entidad.Transaccional.MetadataArchivo", "Firma")
                        .WithOne()
                        .HasForeignKey("Dominio.ContextoPrincipal.Entidad.Transaccional.Compareciente", "FirmaId")
                        .HasConstraintName("FK_Firmas_Comparecientes")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dominio.ContextoPrincipal.Entidad.Transaccional.MetadataArchivo", "Foto")
                        .WithOne()
                        .HasForeignKey("Dominio.ContextoPrincipal.Entidad.Transaccional.Compareciente", "FotoId")
                        .HasConstraintName("FK_Fotos_Comparecientes")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dominio.ContextoPrincipal.Entidad.Transaccional.MetadataArchivo", "ImagenDocumento")
                        .WithOne()
                        .HasForeignKey("Dominio.ContextoPrincipal.Entidad.Transaccional.Compareciente", "ImagenDocumentoId")
                        .HasConstraintName("FK_ImagenesDocumento_Comparecientes")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dominio.ContextoPrincipal.Entidad.Parametricas.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId")
                        .HasConstraintName("FK_Personas_Comparecientes")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Dominio.ContextoPrincipal.Entidad.Transaccional.DocumentoPendienteAutorizar", b =>
                {
                    b.HasOne("Dominio.ContextoPrincipal.Entidad.Parametricas.Notaria", "Notaria")
                        .WithMany()
                        .HasForeignKey("NotariaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dominio.ContextoPrincipal.Entidad.Transaccional.Tramite", "Tramite")
                        .WithMany()
                        .HasForeignKey("TramiteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Dominio.ContextoPrincipal.Entidad.Transaccional.DocumentoPrevio", b =>
                {
                    b.HasOne("Dominio.ContextoPrincipal.Entidad.Transaccional.Tramite", "Tramite")
                        .WithOne("DocumentoPrevio")
                        .HasForeignKey("Dominio.ContextoPrincipal.Entidad.Transaccional.DocumentoPrevio", "TramiteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Dominio.ContextoPrincipal.Entidad.Transaccional.ExcepcionHuella", b =>
                {
                    b.HasOne("Dominio.ContextoPrincipal.Entidad.Transaccional.Compareciente", "Compareciente")
                        .WithOne("ExcepcionHuella")
                        .HasForeignKey("Dominio.ContextoPrincipal.Entidad.Transaccional.ExcepcionHuella", "ComparecienteId")
                        .HasConstraintName("FK_ExcepcionesHuellas_Comparecientes")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Dominio.ContextoPrincipal.Entidad.Transaccional.RecaudoTramiteVirtual", b =>
                {
                    b.HasOne("Dominio.ContextoPrincipal.Entidad.TramitesPortalVirtual", "TramitesPortalVirtual")
                        .WithMany("RecaudosTramiteVirtual")
                        .HasForeignKey("TramitePortalVirtualId")
                        .IsRequired();
                });

            modelBuilder.Entity("Dominio.ContextoPrincipal.Entidad.Transaccional.Tramite", b =>
                {
                    b.HasOne("Dominio.ContextoPrincipal.Entidad.Transaccional.MetadataArchivo", "ActaNotarial")
                        .WithOne()
                        .HasForeignKey("Dominio.ContextoPrincipal.Entidad.Transaccional.Tramite", "ActaNotarialId")
                        .HasConstraintName("FK_Tramites_MetadataActaNotarial")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Dominio.ContextoPrincipal.Entidad.Parametricas.EstadoTramite", "EstadoTramite")
                        .WithMany()
                        .HasForeignKey("EstadoTramiteId")
                        .HasConstraintName("FK_Tramites_EstadosTramites")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dominio.ContextoPrincipal.Entidad.Parametricas.Notaria", "Notaria")
                        .WithMany()
                        .HasForeignKey("NotariaId")
                        .HasConstraintName("FK_Tramites_Notarias")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dominio.ContextoPrincipal.Entidad.Parametricas.TipoTramite", "TipoTramite")
                        .WithMany()
                        .HasForeignKey("TipoTramiteId")
                        .HasConstraintName("FK_Tramites_TiposTramites")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Dominio.ContextoPrincipal.Entidad.Transaccional.TramitePortalVirtualMensaje", b =>
                {
                    b.HasOne("Dominio.ContextoPrincipal.Entidad.TramitesPortalVirtual", "TramitesPortalVirtual")
                        .WithMany("TramitePortalVirtualMensajes")
                        .HasForeignKey("TramitePortalVirtualId")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
